---
swagger: '2.0'
info:
  version: 1.0.0
  title: Echo
  description: |
    #### Echos back every URL, method, parameter and header
    Feel free to make a path or an operation and use **Try Operation** to test it. The echo server will
    render back everything.
schemes:
  - http
  
host: conferenceapi.104.131.17.220.xip.io
basePath: /DVP/API

paths:
  /{version}/ConferenceApi/ConferenceRoom:
    
    post:
    
      parameters:
        - name: New Context Record
          in: body
          description: Record
          schema:
           $ref: '#/definitions/Conference'
        
        - name: version
          in: path
          type: string
          description: Version checking
          required: true
          
        - in: header
          name: authorization
          description: ""
          required: true
          type: string
      responses:
       200:
        description: New Conference Room Added
        
  /{version}/ConferenceApi/ConferenceRooms:
    
    get:
    
      parameters:
      
        - name: version
          in: path
          type: string
          description: Version checking
          required: true
          
        - in: header
          name: authorization
          description: ""
          required: true
          type: string
      responses:
       200:
        description: Get Conference Rooms
          
        
        
  /{version}/ConferenceApi/ConferenceRoom/{ConfName}:
  
    post:
      
      parameters:
       
        - name: Conference Room Details
          in: body
          description: Update
          schema:
           $ref: '#/definitions/Conference'
       
        - name: version
          in: path
          type: string
          description: Version checking
          required: true
          
        - name: ConfName
          in: path
          type: string
          description: Conference Room Name
          required: true
          
        - in: header
          name: authorization
          description: ""
          required: true
          type: string
      responses:
       200:
        description: New Conference user adding happens
        
    get:
      parameters:
        - name: ConfName
          in: path
          type: string
          description: Conference name
          required: true
        
        - name: version
          in: path
          type: string
          description: Version checking
          required: true
        
        - in: header
          name: authorization
          description: ""
          required: true
          type: string
        
      responses:
       200:
        description: Get Conference User details succeeded
        
    delete:
      parameters:
        - name: ConfName
          in: path
          type: string
          description: Conference name
          required: true
        
        - name: version
          in: path
          type: string
          description: Version checking
          required: true
        
        - in: header
          name: authorization
          description: ""
          required: true
          type: string
        
      responses:
       200:
        description: Delete Conference Room succeeded
        
  /{version}/ConferenceApi/ConferenceRoom/{ConfName}/Time:
  
    post:
      
      parameters:
        - name: Conference Room Times
          in: body
          description: Update
          schema:
           $ref: '#/definitions/Conference'
           
        - name: version
          in: path
          type: string
          description: Version checking
          required: true
          
        - name: ConfName
          in: path
          type: string
          description: Conference name
          required: true
          
        - in: header
          name: authorization
          description: ""
          required: true
          type: string
      responses:
       200:
        description: New Mapping happens
        
     
        
  
          
  /{version}/ConferenceApi/Conference/{CfName}/AssignCloudEndUser/{CloudUserId}:
  
    post:
      
      parameters:
        - name: CfName
          in: path
          type: string
          description: Conference name
          required: true
        
        - name: CloudUserId
          in: path
          type: string
          description: CloudUser Id
          required: true
           
        - name: version
          in: path
          type: string
          description: Version checking
          required: true
          
        - in: header
          name: authorization
          description: ""
          required: true
          type: string
          
      responses:
       200:
        description: Updation succeeded
        
  
        
  /{version}/ConferenceApi/ConferenceUser:
  
    post:
      
      parameters:
      
        - name: Conference Room Times
          in: body
          description: Update
          schema:
           $ref: '#/definitions/User'  
        
        - name: version
          in: path
          type: string
          description: Version checking
          required: true
          
        - in: header
          name: authorization
          description: ""
          required: true
          type: string
          
      responses:
       200:
        description: Extension status updated
        
  
        
  /{version}/ConferenceApi/ConferenceUser/{UserId}/AssignToRoom/{RoomName}:
  
    post:
      
      parameters:
        
        - name: version
          in: path
          type: string
          description: Version checking
          required: true
        
        - name: UserId
          in: path
          type: string
          description: UserID
          required: true
        
        - name: RoomName
          in: path
          type: integer
          description: ConferenceRoom Name
          required: true
          
        - in: header
          name: authorization
          description: ""
          required: true
          type: string
          
      responses:
       200:
        description: map extension with user succeeded
        
  
        
  /{version}/ConferenceApi/ConferenceUser/{UserId}/Mode:
  
    post:
      
      parameters:
      
        - name: UserId
          in: path
          type: string
          description: UserID
          required: true
          
        - name: Add Sip User group 
          in: body
          description: Record
          schema:
           $ref: '#/definitions/Modes'
        
        - in: header
          name: authorization
          description: ""
          required: true
          type: string
        
        - name: version
          in: path
          type: string
          description: Version checking
          required: true
          
      responses:
       200:
        description: New user group added
        
  /{version}/ConferenceApi/ConferenceUser/{UserId}:
  
    delete:
      
      parameters:
        
        - name: version
          in: path
          type: string
          description: Version checking
          required: true
        
        - in: header
          name: authorization
          description: ""
          required: true
          type: string
        
        - name: UserId
          in: path
          type: integer
          description: Conference UserID
          required: true
      responses:
       200:
        description: Conference user Deleted 
          
    get:
      parameters:
        - name: UserId
          in: path
          type: integer
          description: Name of Group
          required: true
        
        - name: version
          in: path
          type: string
          description: Version checking
          required: true
        
        - in: header
          name: authorization
          description: ""
          required: true
          type: string
        
      responses:
       200:
        description: Update sip user group succeeded
        
  
        
      
          
definitions:

     
  Conference:
    properties:
     
     Extension:
      type: string
     ConferenceName:
      type: string
     Description:
      type: string
     AllowAnonymousUser:
      type: boolean
     StartTime:
      type: string
     EndTime:
      type: string
     Domain:
      type: string
     IsLocked:
      type: boolean
     MaxUser:
      type: string
      
  User:
    properties:
     
     SipUserUuid:
      type: string
     ActiveTalker:
      type: boolean
     Def:
      type: boolean
     Mute:
      type: boolean
     Mod:
      type: boolean
     ObjCategory:
      {
        description: User catagory,
        type: string,
        enum: ["EXTERNAL", "INRENAL"]
        
      }
     CurrentDef:
      type: boolean
     CurrentMute:
      type: boolean
     CurrentMod:
      type: boolean
     Destination:
      type: string
     JoinType:
      {
        description: Join Types,
        type: string,
        enum: ["IN", "OUT"]
        
      }
      
  
  
  Modes:
    properties:
     
     Def:
      type: boolean
     Mute:
      type: boolean
     Mod:
      type: boolean
  
     
  
  
     
  
      
  
  

  
    
     
 
 
